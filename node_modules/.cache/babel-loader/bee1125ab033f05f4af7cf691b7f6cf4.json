{"ast":null,"code":"var _jsxFileName = \"/Users/pierreraffalli/Desktop/node/babyApp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"./Card.js\";\nimport \"./App.css\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#424242\" // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n\n    },\n    secondary: {\n      light: \"#212121\",\n      main: \"#212121\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#ffcc00\"\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  }\n});\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: null,\n      loading: true\n    };\n  }\n\n  async componentDidMount() {\n    await fetch(\"http://localhost:5000/messages\").then(res => res.json()).then(result => this.setState({\n      messages: result,\n      loading: false\n    })).catch(error => {\n      console.log(\"Error\", error);\n    });\n    console.log(this.state.messages);\n  }\n\n  render() {\n    return this.state.loading === true ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(AppBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Baby Gif App\"))), /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"username\",\n      style: {\n        margin: 2,\n        paddingTop: \"5em\",\n        width: \"30%\"\n      },\n      value: \"Anonymous\",\n      helperText: \"Nickname\",\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"outlined-multiline-static\",\n      style: {\n        margin: 2,\n        paddingTop: \"1em\",\n        width: \"30%\"\n      },\n      multiline: true,\n      rows: \"2\",\n      defaultValue: \"Your message\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"filled-full-width\",\n      style: {\n        margin: 2,\n        paddingTop: \"1em\",\n        width: \"30%\"\n      },\n      placeholder: \"http://...\",\n      helperText: \"Image URL\",\n      margin: \"normal\",\n      InputLabelProps: {\n        shrink: true\n      },\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        paddingTop: \"5em\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, this.state.messages.map(message => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 3,\n      key: message._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      username: message.username,\n      subject: message.subject,\n      message: message.message,\n      imageUrl: message.imageUrl,\n      date: message.created,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/pierreraffalli/Desktop/node/babyApp/client/src/App.js"],"names":["React","Component","AppBar","Toolbar","Typography","TextField","Grid","Card","createMuiTheme","ThemeProvider","theme","palette","primary","main","secondary","light","contrastText","contrastThreshold","tonalOffset","App","constructor","props","state","result","loading","componentDidMount","fetch","then","res","json","setState","messages","catch","error","console","log","render","margin","paddingTop","width","shrink","map","message","_id","username","subject","imageUrl","created"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"./Card.js\";\nimport \"./App.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      // light: will be calculated from palette.primary.main,\n      main: \"#424242\"\n      // dark: will be calculated from palette.primary.main,\n      // contrastText: will be calculated to contrast with palette.primary.main\n    },\n    secondary: {\n      light: \"#212121\",\n      main: \"#212121\",\n      // dark: will be calculated from palette.secondary.main,\n      contrastText: \"#ffcc00\"\n    },\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2\n  }\n});\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { result: null, loading: true };\n  }\n\n  async componentDidMount() {\n    await fetch(\"http://localhost:5000/messages\")\n      .then(res => res.json())\n      .then(result =>\n        this.setState({\n          messages: result,\n          loading: false\n        })\n      )\n      .catch(error => {\n        console.log(\"Error\", error);\n      });\n    console.log(this.state.messages);\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div>Loading...</div>\n    ) : (\n      <ThemeProvider theme={theme}>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\">Baby Gif App</Typography>\n          </Toolbar>\n        </AppBar>\n        <form noValidate autoComplete=\"off\">\n          <div>\n            <TextField\n              id=\"username\"\n              style={{ margin: 2, paddingTop: \"5em\", width: \"30%\" }}\n              value=\"Anonymous\"\n              helperText=\"Nickname\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              variant=\"filled\"\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"outlined-multiline-static\"\n              style={{ margin: 2, paddingTop: \"1em\", width: \"30%\" }}\n              multiline\n              rows=\"2\"\n              defaultValue=\"Your message\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div>\n            <TextField\n              id=\"filled-full-width\"\n              style={{ margin: 2, paddingTop: \"1em\", width: \"30%\" }}\n              placeholder=\"http://...\"\n              helperText=\"Image URL\"\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              variant=\"filled\"\n            />\n          </div>\n        </form>\n        <Grid container spacing={3} style={{ paddingTop: \"5em\" }}>\n          {this.state.messages.map(message => (\n            <Grid item xs={3} key={message._id}>\n              <Card\n                username={message.username}\n                subject={message.subject}\n                message={message.message}\n                imageUrl={message.imageUrl}\n                date={message.created}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      </ThemeProvider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}